#include "cache.h"
#include<vector>
#include <cstdlib>
vector<int>R_OFFSET{6,-3,-1,0,1,3,4,5,10,11,12,16,22,23,30,32};


void CACHE::llc_prefetcher_initialize() 
{
    cout << "LLC Next Line Prefetcher" << endl;
}

uint32_t CACHE::llc_prefetcher_operate(uint64_t addr, uint64_t ip, uint8_t cache_hit, uint8_t type, uint32_t metadata_in)
{

  srand(time(0));
  int NUM_DEGREE=1;
  for(int i=1;i<=NUM_DEGREE;i++)
{
   int V_Index=rand()%R_OFFSET.size();
   uint64_t pf_addr = ((addr>>LOG2_BLOCK_SIZE)+R_OFFSET[V_Index]) << LOG2_BLOCK_SIZE; //#define LOG2_BLOCK_SIZE 6 (in champsim.h header file). 6 means log(2^6) 64 bytes.?? modified Dikshit.
   prefetch_line(ip, addr, pf_addr, FILL_LLC, 0);
}
  return metadata_in;
}

uint32_t CACHE::llc_prefetcher_cache_fill(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr, uint32_t metadata_in)
{
  return metadata_in;
}

void CACHE::llc_prefetcher_final_stats()
{
  cout << "LLC Next Line Prefetcher Final Stats: none" << endl;
}